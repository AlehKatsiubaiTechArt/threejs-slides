/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'

import { GLTF } from 'three/examples/jsm/loaders/GLTFLoader'
import { useFrame } from 'react-three-fiber'

type GLTFResult = GLTF & {
  nodes: {
    Cube002: THREE.Mesh
    Cube: THREE.Mesh
    Cube001: THREE.Mesh
    BezierCurve: THREE.Mesh
    Text: THREE.Mesh
    Text001: THREE.Mesh
    Text002: THREE.Mesh
  }
  materials: {
    Ground: THREE.MeshStandardMaterial
    Stone: THREE.MeshStandardMaterial
    Back: THREE.MeshStandardMaterial
    white: THREE.MeshStandardMaterial
  }
}

export default function Model(props: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials } = useGLTF('/models/flash.glb') as GLTFResult
  useFrame(({ gl }) => {
    gl.setClearColor(0x000000)
  })
  return (
    <group ref={group} {...props} dispose={null}>
      <mesh
        material={materials.Ground}
        geometry={nodes.Cube002.geometry}
        scale={[2, 1, 2]}
      >
        <mesh
          scale={[0.25, 0.5, 0.25]}
          material={materials.Stone}
          geometry={nodes.Cube.geometry}
        >
          <mesh material={materials.Back} geometry={nodes.Cube001.geometry}>
            <mesh
              material={materials.white}
              geometry={nodes.BezierCurve.geometry}
            />
          </mesh>
          <mesh material={materials.white} geometry={nodes.Text.geometry} />
          <mesh material={materials.white} geometry={nodes.Text001.geometry} />
          <mesh material={materials.white} geometry={nodes.Text002.geometry} />
        </mesh>
      </mesh>
    </group>
  )
}

useGLTF.preload('/flash.glb')
