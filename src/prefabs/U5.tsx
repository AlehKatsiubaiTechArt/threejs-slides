/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'

import { GLTF } from 'three/examples/jsm/loaders/GLTFLoader'
import { useFrame } from 'react-three-fiber'

type GLTFResult = GLTF & {
  nodes: {
    Plane: THREE.Mesh
    Text004: THREE.Mesh
  }
  materials: {
    yellow: THREE.MeshStandardMaterial
    Black: THREE.MeshStandardMaterial
  }
}

export default function Model(props: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials } = useGLTF('/models/U5.glb') as GLTFResult
  useFrame((state) => {
    const t = state.clock.getElapsedTime()
    if (group.current) {
      group.current.rotation.z = (1 + Math.sin(t / 1.5)) / 20
      group.current.rotation.x = Math.cos(t / 4) / 8
      group.current.rotation.y = Math.sin(t / 4) / 8
      group.current.position.y = (1 + Math.sin(t / 1.5)) / 10
    }
  })
  return (
    <group ref={group} {...props} dispose={null}>
      <mesh material={materials.yellow} geometry={nodes.Plane.geometry}>
        <mesh material={materials.Black} geometry={nodes.Text004.geometry} />
      </mesh>
    </group>
  )
}

useGLTF.preload('/U5.glb')
