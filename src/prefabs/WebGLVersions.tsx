/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'

import { GLTF } from 'three/examples/jsm/loaders/GLTFLoader'
import { useFrame } from 'react-three-fiber'

type GLTFResult = GLTF & {
  nodes: {
    Circle: THREE.Mesh
    Text003: THREE.Mesh
    Circle001: THREE.Mesh
    Text005: THREE.Mesh
    Text006: THREE.Mesh
    Cone: THREE.Mesh
    Text007: THREE.Mesh
    Text008: THREE.Mesh
  }
  materials: {
    Red: THREE.MeshStandardMaterial
    Blue: THREE.MeshStandardMaterial
  }
}

export default function WebGLVersions(props: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials } = useGLTF('/models/WebGL.glb') as GLTFResult
  useFrame((state) => {
    const t = state.clock.getElapsedTime()
    if (group.current) {
      group.current.rotation.z = (1 + Math.sin(t / 1.5)) / 200
      group.current.rotation.x = Math.cos(t / 4) / 160
      group.current.rotation.y = Math.sin(t / 4) / 160
      group.current.position.y = (1 + Math.sin(t / 1.5)) / 10
    }
  })
  return (
    <group ref={group} {...props} dispose={null}>
      <group position={[-2, 0, 0]}>
        <mesh
          material={materials.Red}
          geometry={nodes.Circle.geometry}
          position={[-3, -2, 0]}
        >
          <mesh
            material={materials.Red}
            geometry={nodes.Text003.geometry}
            position={[-1, -0.33, 0.24]}
          />
        </mesh>
        <mesh
          material={materials.Blue}
          geometry={nodes.Circle001.geometry}
          position={[-3, 2, -0.14]}
        >
          <mesh
            material={materials.Blue}
            geometry={nodes.Text005.geometry}
            position={[-1.15, -0.33, 0.13]}
          />
        </mesh>
        <mesh
          material={materials.Blue}
          geometry={nodes.Text006.geometry}
          position={[-0.3, 1.7, -0.01]}
        />
        <mesh
          material={materials.Blue}
          geometry={nodes.Cone.geometry}
          position={[-2, 0, 0.1]}
        />
        <mesh
          material={materials.Red}
          geometry={nodes.Text007.geometry}
          position={[-0.5, -2.4, -0.01]}
        />
      </group>
      <group position={[5, 0, 0]}>
        <mesh
          material={materials.Red}
          geometry={nodes.Circle.geometry}
          position={[-3, -2, 0]}
        >
          <mesh
            material={materials.Red}
            geometry={nodes.Text003.geometry}
            position={[-1, -0.33, 0.24]}
          />
        </mesh>
        <mesh
          material={materials.Blue}
          geometry={nodes.Circle001.geometry}
          position={[-3, 2, -0.14]}
        >
          <mesh
            material={materials.Blue}
            geometry={nodes.Text005.geometry}
            position={[-1.15, -0.33, 0.13]}
          />
        </mesh>
        <mesh
          material={materials.Blue}
          geometry={nodes.Text008.geometry}
          position={[-0.3, 1.65, 0]}
        />
        <mesh
          material={materials.Blue}
          geometry={nodes.Cone.geometry}
          position={[-2, 0, 0.1]}
        />
        <mesh
          material={materials.Red}
          geometry={nodes.Text006.geometry}
          position={[-0.3, -2.35, -0.01]}
        />
      </group>
    </group>
  )
}

useGLTF.preload('/WebGL.glb')
